#!/usr/bin/env bash

print_info() {
    info title
    info underline
    
    info "OS" distro
    info "Host" model
    info "Kernel" kernel
    info "Uptime" uptime
    info "Packages" packages
    info "Shell" shell
    info "Resolution" resolution
    info "DE" de
    info "WM" wm
    info "WM Theme" wm_theme
    info "Terminal" term
    info "CPU" cpu
    info "GPU" gpu
    info "Memory" memory
    info "Disk" disk
    info "Battery" battery
    info "Locale" locale
    
    info cols
}

title_fqdn="off"

kernel_shorthand="on"

distro_shorthand="off"

uptime_shorthand="on"

memory_percent="on"
memory_unit="gib"

package_managers="on"

shell_path="off"
shell_version="on"

speed_type="bios_limit"
speed_shorthand="on"
cpu_brand="on"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="C"

gpu_brand="on"
gpu_type="all"

refresh_rate="on"

disk_show=('/' '/home')
disk_subtitle="mount"
disk_percent="on"

colors=(8 7 15 4 5 6 1 2 3)

bold="on"
underline_enabled="on"
underline_char="━"
separator=" ➤ "

block_range=(0 15)
color_blocks="on"
block_width=3
block_height=1

bar_char_elapsed="█"
bar_char_total="░"
bar_border="on"
bar_length=15
bar_color_elapsed="distro"
bar_color_total="distro"

image_backend="ascii"
image_source="auto"

ascii_distro="void"
ascii_colors=(8 0 7 15 4 5 6)
ascii_bold="on"

read -rd '' ascii_data <<'EOF'
${c1}                    ░░░░░░░░░░░░░░░░░░░░░░░░░░░
${c2}                  ░░                          ░░
${c1}                ░░    ██    ██  ██████  ██████  ░░
${c2}              ░░      ██    ██ ██    ██ ██    ██  ░░
${c3}            ░░        ██    ██ ██    ██ ██    ██    ░░
${c4}          ░░          ██    ██ ██    ██ ██    ██      ░░
${c5}        ░░             ██  ██  ██    ██ ██    ██        ░░
${c6}      ░░                ████    ██████  ██████            ░░
${c1}    ░░                    ██                                ░░
${c2}  ░░                      ██                                  ░░
${c3}░░                        ██                                    ░░
${c4}░░                                                              ░░
${c5}  ░░                                                          ░░
${c6}    ░░                                                      ░░
${c1}      ░░                                                  ░░
${c2}        ░░                                              ░░
${c3}          ░░                                          ░░
${c4}            ░░                                      ░░
${c5}              ░░                                  ░░
${c6}                ░░                              ░░
${c1}                  ░░                          ░░
${c2}                    ░░░░░░░░░░░░░░░░░░░░░░░░░░░
EOF

read -rd '' ascii_data_alt <<'EOF'
${c1}        ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
${c2}      ▄▀                              ▀▄
${c1}    ▄▀    ██    ██  ██████  ██████      ▀▄
${c2}  ▄▀      ██    ██ ██    ██ ██    ██      ▀▄
${c3}▄▀        ██    ██ ██    ██ ██    ██        ▀▄
${c4}█          ██    ██ ██    ██ ██    ██          █
${c5}█           ██  ██  ██    ██ ██    ██           █
${c6}█            ████    ██████  ██████            █
${c1}█              ██                              █
${c2}█              ██                              █
${c3}▀▄            ██                              ▄▀
${c4}  ▀▄          ██                            ▄▀
${c5}    ▀▄                                    ▄▀
${c6}      ▀▄                                ▄▀
${c1}        ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
EOF

read -rd '' ascii_data_minimal <<'EOF'
${c1}    ███████████████████████████████
${c2}  ███                             ███
${c1}███     ██   ██ ██████ ██████       ███
${c2}██      ██   ██ ██  ██ ██  ██        ██
${c3}██      ██   ██ ██  ██ ██  ██        ██
${c4}██       ██ ██  ██  ██ ██  ██        ██
${c5}██        ███   ██████ ██████        ██
${c6}██         ██     ██    ██           ██
${c1}███                                 ███
${c2}  ███                             ███
${c1}    ███████████████████████████████
EOF

image_size="auto"
gap=3
stdout="off"

get_battery() {
    case $os in
        "Linux"*)
            battery_dir="/sys/class/power_supply"
            if [[ -d "$battery_dir" ]]; then
                for battery in "$battery_dir"/BAT*; do
                    if [[ -f "$battery/capacity" ]]; then
                        capacity=$(< "$battery/capacity")
                        status=$(< "$battery/status")
                        printf "%s%% [%s]" "$capacity" "$status"
                        return
                    fi
                done
            fi
            ;;
    esac
}

info() {
    [[ -n $2 ]] && {
        string="${2^}"
        string="${string// / }"
        string="${string//_/ }"
        
        case $1 in
            "Battery") prin "$1" "$(get_battery)" ;;
            *) prin "$1" "$string" ;;
        esac
    }
}

export TERM=xterm-256color
